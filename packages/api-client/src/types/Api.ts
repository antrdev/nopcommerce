
import { Context } from './';
export interface NopCommerceApiMethods {
	authenticateGetTokenPost: (context: Context, params) => any;
	backInStockSubscriptionCustomerSubscriptionsGet: (context: Context, params) => any;
	backInStockSubscriptionCustomerSubscriptionsPOSTPost: (context: Context, params) => any;
	backInStockSubscriptionSubscribePopupPOSTProductIdPost: (context: Context, params) => any;
	backInStockSubscriptionSubscribePopupProductIdGet: (context: Context, params) => any;
	blogBlogByMonthPost: (context: Context, params) => any;
	blogBlogByTagPost: (context: Context, params) => any;
	blogBlogCommentAddBlogPostIdPost: (context: Context, params) => any;
	blogGetBlogPostBlogPostIdGet: (context: Context, params) => any;
	blogListPost: (context: Context, params) => any;
	blogListRssLanguageIdGet: (context: Context, params) => any;
	boardsActiveDiscussionsGet: (context: Context, params) => any;
	boardsActiveDiscussionsRssGet: (context: Context, params) => any;
	boardsCustomerForumSubscriptionsGet: (context: Context, params) => any;
	boardsCustomerForumSubscriptionsPOSTPost: (context: Context, params) => any;
	boardsForumGroupIdGet: (context: Context, params) => any;
	boardsForumIdGet: (context: Context, params) => any;
	boardsForumRssIdGet: (context: Context, params) => any;
	boardsForumWatchIdGet: (context: Context, params) => any;
	boardsIndexGet: (context: Context, params) => any;
	boardsPostCreateIdQuoteGet: (context: Context, params) => any;
	boardsPostCreatePost: (context: Context, params) => any;
	boardsPostDeleteIdDelete: (context: Context, params) => any;
	boardsPostEditIdGet: (context: Context, params) => any;
	boardsPostEditPost: (context: Context, params) => any;
	boardsPostVotePostIdGet: (context: Context, params) => any;
	boardsSearchForumIdGet: (context: Context, params) => any;
	boardsTopicCreateIdGet: (context: Context, params) => any;
	boardsTopicCreatePost: (context: Context, params) => any;
	boardsTopicDeleteIdDelete: (context: Context, params) => any;
	boardsTopicEditIdGet: (context: Context, params) => any;
	boardsTopicEditPost: (context: Context, params) => any;
	boardsTopicIdGet: (context: Context, params) => any;
	boardsTopicMoveIdGet: (context: Context, params) => any;
	boardsTopicWatchIdGet: (context: Context, params) => any;
	checkoutBillingAddressPost: (context: Context, params) => any;
	checkoutCompletedGet: (context: Context, params) => any;
	checkoutConfirmOrderGet: (context: Context, params) => any;
	checkoutConfirmPost: (context: Context, params) => any;
	checkoutDeleteEditAddressAddressIdDelete: (context: Context, params) => any;
	checkoutEnterPaymentInfoPost: (context: Context, params) => any;
	checkoutGetAddressByIdAddressIdGet: (context: Context, params) => any;
	checkoutIndexGet: (context: Context, params) => any;
	checkoutNewBillingAddressPost: (context: Context, params) => any;
	checkoutNewShippingAddressPost: (context: Context, params) => any;
	checkoutOnePageCheckoutGet: (context: Context, params) => any;
	checkoutOpcCompleteRedirectionPaymentPost: (context: Context, params) => any;
	checkoutOpcConfirmOrderGet: (context: Context, params) => any;
	checkoutOpcSaveBillingPost: (context: Context, params) => any;
	checkoutOpcSavePaymentInfoPost: (context: Context, params) => any;
	checkoutOpcSavePaymentMethodPost: (context: Context, params) => any;
	checkoutOpcSaveShippingMethodPost: (context: Context, params) => any;
	checkoutOpcSaveShippingPost: (context: Context, params) => any;
	checkoutPaymentInfoGet: (context: Context, params) => any;
	checkoutPaymentMethodGet: (context: Context, params) => any;
	checkoutSaveEditAddressPost: (context: Context, params) => any;
	checkoutSelectBillingAddressAddressIdGet: (context: Context, params) => any;
	checkoutSelectPaymentMethodPost: (context: Context, params) => any;
	checkoutSelectShippingAddressAddressIdGet: (context: Context, params) => any;
	checkoutSelectShippingMethodPost: (context: Context, params) => any;
	checkoutShippingAddressGet: (context: Context, params) => any;
	checkoutShippingMethodGet: (context: Context, params) => any;
	commonContactUsGet: (context: Context, params) => any;
	commonContactUsSendPost: (context: Context, params) => any;
	commonContactVendorSendPost: (context: Context, params) => any;
	commonContactVendorVendorIdGet: (context: Context, params) => any;
	commonEuCookieLawAcceptGet: (context: Context, params) => any;
	commonRobotsTextFileGet: (context: Context, params) => any;
	commonSetCurrencyCustomerCurrencyIdPost: (context: Context, params) => any;
	commonSetLanguageLangIdPost: (context: Context, params) => any;
	commonSetStoreThemeGet: (context: Context, params) => any;
	commonSetTaxTypePost: (context: Context, params) => any;
	commonSitemapPost: (context: Context, params) => any;
	commonSitemapXmlIdGet: (context: Context, params) => any;
	countryGetStatesByCountryIdCountryIdGet: (context: Context, params) => any;
	customerAccountActivationPost: (context: Context, params) => any;
	customerAddressAddGet: (context: Context, params) => any;
	customerAddressAddPost: (context: Context, params) => any;
	customerAddressDeleteAddressIdDelete: (context: Context, params) => any;
	customerAddressEditAddressIdGet: (context: Context, params) => any;
	customerAddressEditAddressIdPut: (context: Context, params) => any;
	customerAddressesGet: (context: Context, params) => any;
	customerAvatarGet: (context: Context, params) => any;
	customerChangePasswordGet: (context: Context, params) => any;
	customerChangePasswordPost: (context: Context, params) => any;
	customerCheckBalancePost: (context: Context, params) => any;
	customerCheckGiftCardBalanceGet: (context: Context, params) => any;
	customerCheckUsernameAvailabilityGet: (context: Context, params) => any;
	customerDownloadableProductsGet: (context: Context, params) => any;
	customerEmailRevalidationPost: (context: Context, params) => any;
	customerGdprToolsDeleteDelete: (context: Context, params) => any;
	customerGdprToolsExportGet: (context: Context, params) => any;
	customerGdprToolsGet: (context: Context, params) => any;
	customerInfoGet: (context: Context, params) => any;
	customerInfoPost: (context: Context, params) => any;
	customerLogoutGet: (context: Context, params) => any;
	customerPasswordRecoveryConfirmPOSTPost: (context: Context, params) => any;
	customerPasswordRecoveryConfirmPost: (context: Context, params) => any;
	customerPasswordRecoveryGet: (context: Context, params) => any;
	customerPasswordRecoverySendPost: (context: Context, params) => any;
	customerRegisterGet: (context: Context, params) => any;
	customerRegisterPost: (context: Context, params) => any;
	customerRegisterResultResultIdPost: (context: Context, params) => any;
	customerRemoveAvatarDelete: (context: Context, params) => any;
	customerRemoveExternalAssociationIdDelete: (context: Context, params) => any;
	customerUploadAvatarPost: (context: Context, params) => any;
	customerUserAgreementGet: (context: Context, params) => any;
	catalogGetCatalogRootGet: (context: Context, params) => any;
	catalogGetCatalogSubCategoriesIdGet: (context: Context, params) => any;
	catalogGetCategoryCategoryIdPost: (context: Context, params) => any;
	catalogGetCategoryProductsCategoryIdPost: (context: Context, params) => any;
	catalogGetManufacturerManufacturerIdPost: (context: Context, params) => any;
	catalogGetManufacturerProductsManufacturerIdPost: (context: Context, params) => any;
	catalogGetProductsByTagProductTagIdPost: (context: Context, params) => any;
	catalogGetTagProductsProductTagIdPost: (context: Context, params) => any;
	catalogGetVendorProductsVendorIdPost: (context: Context, params) => any;
	catalogGetVendorVendorIdPost: (context: Context, params) => any;
	catalogManufacturerAllGet: (context: Context, params) => any;
	catalogProductTagsAllGet: (context: Context, params) => any;
	catalogSearchPost: (context: Context, params) => any;
	catalogSearchProductsPost: (context: Context, params) => any;
	catalogSearchTermAutoCompleteGet: (context: Context, params) => any;
	catalogVendorAllGet: (context: Context, params) => any;
	downloadGetDownloadGet: (context: Context, params) => any;
	downloadGetFileUploadGet: (context: Context, params) => any;
	downloadGetLicenseGet: (context: Context, params) => any;
	downloadGetOrderNoteFileOrderNoteIdGet: (context: Context, params) => any;
	downloadSampleProductIdGet: (context: Context, params) => any;
	newsletterSubscribeNewsletterGet: (context: Context, params) => any;
	newsletterSubscriptionActivationGet: (context: Context, params) => any;
	newsGetNewsItemNewsItemIdGet: (context: Context, params) => any;
	newsListPost: (context: Context, params) => any;
	newsListRssLanguageIdGet: (context: Context, params) => any;
	newsNewsCommentAddNewsItemIdPost: (context: Context, params) => any;
	orderCancelRecurringPaymentPost: (context: Context, params) => any;
	orderCustomerOrdersGet: (context: Context, params) => any;
	orderCustomerRewardPointsGet: (context: Context, params) => any;
	orderDetailsOrderIdGet: (context: Context, params) => any;
	orderGetPdfInvoiceOrderIdGet: (context: Context, params) => any;
	orderReOrderOrderIdGet: (context: Context, params) => any;
	orderRePostPaymentOrderIdGet: (context: Context, params) => any;
	orderRetryLastRecurringPaymentPost: (context: Context, params) => any;
	orderShipmentDetailsShipmentIdGet: (context: Context, params) => any;
	pollVotePollAnswerIdGet: (context: Context, params) => any;
	privateMessagesDeleteInboxPMPost: (context: Context, params) => any;
	privateMessagesDeletePMPrivateMessageIdDelete: (context: Context, params) => any;
	privateMessagesDeleteSentPMPost: (context: Context, params) => any;
	privateMessagesIndexGet: (context: Context, params) => any;
	privateMessagesMarkUnreadPost: (context: Context, params) => any;
	privateMessagesSendPMPost: (context: Context, params) => any;
	privateMessagesSendPMToCustomerIdGet: (context: Context, params) => any;
	privateMessagesViewPMPrivateMessageIdGet: (context: Context, params) => any;
	productAddProductToCompareListProductIdGet: (context: Context, params) => any;
	productClearCompareListGet: (context: Context, params) => any;
	productCompareProductsGet: (context: Context, params) => any;
	productCustomerProductReviewsGet: (context: Context, params) => any;
	productEstimateShippingPost: (context: Context, params) => any;
	productGetProductCombinationsProductIdGet: (context: Context, params) => any;
	productGetProductDetailsProductIdGet: (context: Context, params) => any;
	productNewProductsGet: (context: Context, params) => any;
	productNewProductsRssGet: (context: Context, params) => any;
	productProductEmailAFriendProductIdGet: (context: Context, params) => any;
	productProductEmailAFriendSendPost: (context: Context, params) => any;
	productProductReviewsAddProductIdPost: (context: Context, params) => any;
	productProductReviewsProductIdGet: (context: Context, params) => any;
	productRecentlyViewedProductsGet: (context: Context, params) => any;
	productRemoveProductFromCompareListProductIdGet: (context: Context, params) => any;
	productSetProductReviewHelpfulnessProductReviewIdPost: (context: Context, params) => any;
	profileIndexGet: (context: Context, params) => any;
	returnRequestCustomerReturnRequestsGet: (context: Context, params) => any;
	returnRequestReturnRequestOrderIdGet: (context: Context, params) => any;
	returnRequestReturnRequestSubmitOrderIdPost: (context: Context, params) => any;
	returnRequestUploadFileReturnRequestPost: (context: Context, params) => any;
	scheduleTaskRunTaskGet: (context: Context, params) => any;
	shoppingCartAddProductToCartFromCatalogProductIdPost: (context: Context, params) => any;
	shoppingCartAddProductToCartFromDetailsProductIdPost: (context: Context, params) => any;
	shoppingCartApplyDiscountCouponPost: (context: Context, params) => any;
	shoppingCartApplyGiftCardPost: (context: Context, params) => any;
	shoppingCartCartGet: (context: Context, params) => any;
	shoppingCartCheckoutAttributeChangePost: (context: Context, params) => any;
	shoppingCartGetEstimateShippingPost: (context: Context, params) => any;
	shoppingCartMiniCartGet: (context: Context, params) => any;
	shoppingCartProductDetailsAttributeChangeProductIdPut: (context: Context, params) => any;
	shoppingCartRemoveDiscountCouponPost: (context: Context, params) => any;
	shoppingCartRemoveGiftCardCodePost: (context: Context, params) => any;
	shoppingCartSelectShippingOptionPost: (context: Context, params) => any;
	shoppingCartUpdateCartPost: (context: Context, params) => any;
	shoppingCartUploadFileCheckoutAttributeAttributeIdPost: (context: Context, params) => any;
	shoppingCartUploadFileProductAttributeAttributeIdPost: (context: Context, params) => any;
	topicGetTopicDetailsIdGet: (context: Context, params) => any;
	urlRecordGetActiveSlugEntityIdLanguageIdGet: (context: Context, params) => any;
	urlRecordGetAllGet: (context: Context, params) => any;
	urlRecordGetByIdsIdsGet: (context: Context, params) => any;
	urlRecordGetBySlugGet: (context: Context, params) => any;
	urlRecordGetSeNameEntityIdGet: (context: Context, params) => any;
	urlRecordGetSeNameGet: (context: Context, params) => any;
	urlRecordValidateSeNameEntityIdPost: (context: Context, params) => any;
	vendorApplyVendorGet: (context: Context, params) => any;
	vendorApplyVendorSubmitPost: (context: Context, params) => any;
	vendorInfoGet: (context: Context, params) => any;
	vendorInfoPost: (context: Context, params) => any;
	vendorRemovePictureDelete: (context: Context, params) => any;
	wishlistAddItemsToCartFromWishlistPut: (context: Context, params) => any;
	wishlistEmailWishlistGet: (context: Context, params) => any;
	wishlistEmailWishlistSendPost: (context: Context, params) => any;
	wishlistUpdateWishlistPost: (context: Context, params) => any;
	wishlistWishlistGet: (context: Context, params) => any;
}
